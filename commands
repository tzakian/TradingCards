await helpers.invokeScriptFunction(context.defaultUserContext.address + "::TradingCards::init_account", [], [])

await devapi.resources()

let mintContext = await context.UserContext.fromDisk("test");

let possible_cards = [7, 84, 55, 105, 81, 116, 117, 116,
7, 79, 86, 85, 107, 106, 68, 86,
7, 68, 83, 75, 120, 106, 84, 55,
7, 76, 119, 112, 103, 120, 86, 117,
7, 87, 77, 97, 50, 107, 98, 54,
7, 84, 97, 122, 109, 98, 73, 75,
7, 69, 121, 49, 90, 77, 53, 56,
7, 65, 76, 56, 85, 51, 110, 71,
7, 70, 104, 89, 76, 71, 100, 97,
7, 65, 77, 84, 48, 72, 78, 113,
7, 115, 110, 103, 56, 56, 118, 84,
7, 102, 115, 76, 85, 122, 86, 100,
7, 116, 79, 73, 73, 111, 85, 49,
7, 84, 51, 121, 82, 116, 111, 121,
7, 88, 105, 69, 108, 84, 106, 116,
7, 106, 77, 88, 55, 89, 75, 67,
7, 68, 78, 103, 102, 114, 84, 104,
7, 112, 82, 118, 54, 121, 122, 74,
7, 76, 105, 117, 113, 116, 121, 105,
7, 68, 51, 105, 81, 76, 66, 114]

let card_categories = [
0, 0, 0,
1, 1, 1, 1, 1, 1,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]

let deck_distribution = [
    1,
    1,
    3
]

await helpers.invokeScriptFunctionForContext(mintContext, context.defaultUserContext.address + "::TradingCards::register_card_deck", [], [mv.Hex(helpers.bufferToHex(possible_cards)), mv.Hex(helpers.bufferToHex(card_categories)), mv.Hex(helpers.bufferToHex(deck_distribution))])

await devapi.resources(mintContext.address)

await helpers.invokeScriptFunctionForContext(mintContext, context.defaultUserContext.address + "::TradingCards::mint", [], [mv.Address(context.defaultUserContext.address), mv.U64("42"), mv.Ascii("Todd")])

await devapi.transaction(

await devapi.resources(context.defaultUserContext.address)

await helpers.invokeScriptFunction(context.defaultUserContext.address + "::TradingCards::unpack", [], [mv.Address(mintContext.address), mv.U64("0")])

await devapi.transaction(

let x = await devapi.resources()
x[8].data



